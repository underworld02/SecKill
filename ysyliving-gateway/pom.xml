<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>


    <groupId>com.suron.ysyliving</groupId>
    <artifactId>ysyliving-gateway</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>ysyliving-gateway</name>
    <description>ysy-(家居生活)-网关服务</description>
    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
    </properties>


    <dependencies>

        <!-- 引入gateway依赖 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>

        </dependency>

        <!--引入公共模块 , 排除mybatis-plus-->
        <dependency>
            <groupId>com.suron.ysyliving</groupId>
            <artifactId>ysyliving-common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>com.baomidou</groupId>
                    <artifactId>mybatis-plus-boot-starter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
            老韩说明
            1. gateway本身不需要spring-boot-starter-web
            2. 所以我们就不用引入 spring-boot-starter-web, 如果保留启动的时候会报告冲突
            3. 一会老师测试.. 再进行修改
        -->
        <!--<dependency>-->
        <!--    <groupId>org.springframework.boot</groupId>-->
        <!--    <artifactId>spring-boot-starter-web</artifactId>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!--
          1. 这里老师想回顾使用dependencyManagement 在进行版本控制
          2. 老韩再强调一下dependencyManagement 用于指定依赖版本,
              但是本身并不引入相关依赖
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <!--
                    老师解读:
                    1. type: pom  和 scope import 配合使用
                    2. 表示 在这个项目的子模块和当前这个模块,
                       在引入spring-cloud-dependencies相关依赖时 锁定版本为${spring-cloud.version}
                    3. 通过 pom + import 解决maven单继承机制
                 -->
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>