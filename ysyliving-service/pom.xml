<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.suron.ysyliving</groupId>
    <artifactId>ysyliving-service</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>ysyliving-service</name>
    <description>顺平-(家居生活)-第三方服务</description>
    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>2020.0.5</spring-cloud.version>
    </properties>

    <dependencies>

        <!--
            通过回顾，我们指定，如果该服务需要去拉取nacos配置中心的配置, 需要加入
            spring-cloud-starter-alibaba-nacos-config [融汇贯通]
            这里，我们使用版本仲裁，来指定version
        -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <!--引入 oss starter 我们引入的stater 和文档给的不一样，
        请注意观察artifactId , 小伙伴要和老师写的保持一致
            老师说明: 因为我们在该pom.xml文件中有 dependencyManagement 指定了 spring-cloud-alibaba-dependencies
            版本 2.1.0.RELEASE, 因此这里，我们可以不写version 而是使用版本仲裁
        -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alicloud-oss</artifactId>
            <!--<version>2.1.0.RELEASE</version>-->
        </dependency>

        <!--引入公共模块 , 排除mybatis-plus-->
        <dependency>
            <groupId>com.suron.ysyliving</groupId>
            <artifactId>ysyliving-common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>com.baomidou</groupId>
                    <artifactId>mybatis-plus-boot-starter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!--
         1. 这里老师想回顾使用dependencyManagement 在进行版本控制
         2. 老韩再强调一下dependencyManagement 用于指定依赖版本,
             但是本身并不引入相关依赖
   -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.1.0.RELEASE</version>
                <!--
                    老师解读:
                    1. type: pom  和 scope import 配合使用
                    2. 表示 在这个项目的子模块和当前这个模块,
                       在引入spring-cloud-alibaba相关依赖时 锁定版本为2.1.0.RELEASE
                    3. 通过 pom + import 解决maven单继承机制
                 -->
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>